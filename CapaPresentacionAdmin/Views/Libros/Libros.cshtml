
@{
    ViewBag.Title = "Libros";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card">
    <div class="card-header">
        <i class="fas fa-users me-1"></i> <h7>Lista de Libros</h7>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-12">
                <button type="button" class="btn btn-success" onclick="abrirModal()">Crear nuevo</button>
            </div>
        </div>
        <hr />

        <table id="tablaLibros" class="display cell-border " style="width: 100%;">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Bibliografia</th>
                    <th>Autores</th>
                    <th>Ciencia</th>
                    <th>Editora</th>
                    <th>Idioma</th>
                    <th>Activo</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-dark text-white" style="width: 100%;">
                <h5 class="modal-title" id="exampleModalLabel">Libro</h5>

            </div>
            <div class="modal-body ">

                @*es importante darle el valor 0 que significa que es un nuevo registro el que vamos a insertar
                    y asi podemos validar eso*@

                <input id="txtId" type="text" value="0" />

                <div class="row g-2">

                    <div class="col-sm-6">
                        <label for="txtSignaturaTopografica" class="form-label">SignaturaTopografica</label>
                        <input type="text" class="form-control" id="txtSignaturaTopografica">

                    </div>

                    <div class="col-sm-6">
                        <label for="txtNombre" class="form-label">Nombre</label>
                        <input type="text" class="form-control" id="txtNombre">

                    </div>
                    <div class="col-sm-6">
                        <label for="txtISB" class="form-label">ISB</label>
                        <input type="text" class="form-control" id="txtISB">
                    </div>

                    <div class="col-sm-6">

                        <input type="text" class="form-control" id="txtBibliografiaId" hidden="hidden">

                    </div>

                    <div class="col-sm-6">
                        <label for="cbxBibliografia" class="form-label">Bibliografia</label>
                        <select class="form-select" id="cbxBibliografia">
                        </select>

                    </div>

                    <div class="col-sm-6">
                        <label for="cbxAutores" class="form-label">Autores</label>
                        <select class="form-select" id="cbxAutores">
                        </select>

                    </div>

                    <div class="col-sm-6">
                        <label for="txtAutores" class="form-label">Autores</label>
                        <input type="text" class="form-control" id="txtAutores">
                    </div>
                    <div class="col-sm-6">
                        <label for="txtCiencia" class="form-label">Ciencia</label>
                        <input type="text" class="form-control" id="txtCiencia">
                    </div>
                    <div class="col-sm-6">
                        <label for="txtDesc" class="form-label">Descripcion</label>
                        <input type="text" class="form-control" id="txtDesc">
                    </div>

                    <div class="col-sm-6">
                        <label for="txtEditora" class="form-label">Editora</label>
                        <input type="text" class="form-control" id="txtEditora">
                    </div>

                    <div class="col-sm-6">
                        <label for="txtIdioma" class="form-label">Idioma</label>
                        <input type="text" class="form-control" id="txtIdioma">
                    </div>

                    <div class="col-sm-6">
                        <label for="txtYear" class="form-label">Year</label>
                        <input type="text" class="form-control" id="txtYear">
                    </div>

                    <div class="col-sm-6">
                        <label for="cbxActivo" class="form-label">Activo</label>
                        <select class="form-select" id="cbxActivo">
                            <option value="1">Si</option>
                            <option value="0">No</option>
                        </select>

                    </div>

                    <div class="row mt-2">
                        <div class="col-12">
                            <div id="mensajeError" class="alert alert-danger" role="alert">
                                A simple danger alert—check it out!
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="Guardar()">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Detalles -->
<div class="modal fade" id="ModalDetalles" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-dark text-white" style="width: 100%;">
                <h5 class="modal-title" id="exampleModalLabel">Libro</h5>

            </div>
            <div class="modal-body ">

                @*es importante darle el valor 0 que significa que es un nuevo registro el que vamos a insertar
                    y asi podemos validar eso*@

                <input id="txtIdD" type="text" value="0" hidden="hidden" />

                <div class="row g-2">

                    <div class="col-sm-6">
                        <label for="txtSignaturaTopograficaD" class="form-label">SignaturaTopografica</label>
                        <input type="text" class="form-control" id="txtSignaturaTopograficaD" readonly="readonly">

                    </div>

                    <div class="col-sm-6">
                        <label for="txtNombreD" class="form-label">Nombre</label>
                        <input type="text" class="form-control" id="txtNombreD" readonly="readonly">

                    </div>
                    <div class="col-sm-6">
                        <label for="txtDescD" class="form-label">ISB</label>
                        <input type="text" class="form-control" id="txtDescD" readonly="readonly">
                    </div>
                    <div class="col-sm-6">
                        <label for="txtISBD" class="form-label">ISB</label>
                        <input type="text" class="form-control" id="txtISBD" readonly="readonly">
                    </div>

                    <div class="col-sm-6">
                        <label for="cbxBibliografia" class="form-label">Bibliografia</label>
                        <input type="text" class="form-control" id="cbxBibliografiaD" readonly="readonly" >

                    </div>

                    <div class="col-sm-6">
                        <label for="txtAutoresD" class="form-label">Autores</label>
                        <input type="text" class="form-control" id="txtAutoresD" readonly="readonly">
                    </div>

                    <div class="col-sm-6">
                        <label for="txtCienciaD" class="form-label">Ciencia</label>
                        <input type="text" class="form-control" id="txtCienciaD" readonly="readonly">
                    </div>

                    <div class="col-sm-6">
                        <label for="txtEditoraD" class="form-label">Editora</label>
                        <input type="text" class="form-control" id="txtEditoraD" readonly="readonly">
                    </div>

                    <div class="col-sm-6">
                        <label for="txtIdiomaD" class="form-label">Idioma</label>
                        <input type="text" class="form-control" id="txtIdiomaD" readonly="readonly">
                    </div>

                    <div class="col-sm-6">
                        <label for="txtYearD" class="form-label">Year</label>
                        <input type="text" class="form-control" id="txtYearD" readonly="readonly">
                    </div>

                    <div class="col-sm-6">
                        <label for="cbxActivoD" class="form-label">Activo</label>
                        <input type="text" class="form-control" id="cbxActivoD" readonly="readonly">
                    </div>
                 
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>

        var tablaData;

        var filaSeleccionada;

        @*jQuery.ajax({
            url: '@Url.Action("ListarUsuarios", "Home")',
            type: "GET",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
        /*        debugger; // para detener*/
                var texto1 = "hola soy el texto 1"

                console.log(data)
            }
        })*@

        tablaData = $("#tablaLibros").DataTable
        ({
            responsive: true,
            ordering: false,
            "ajax": {
                url: '@Url.Action("ListarLibros", "Libros")',
                type: "GET",
                dataType: "json",
            },
            "columns":
            [
                    { "data": "Nombre"},
                    { "data": "Bibliografia" },
                    { "data": "Autores" },
                    { "data": "Ciencia" },
                    { "data": "Editora" },
                    { "data": "Idioma" },
                    { "data": "Estado", "render": function (valor) {
                            if (valor) {
                                return '<span class="badge bg-success">Si</span>'
                            } else {
                                return '<span class="badge bg-danger">No</span>'
                            }
                        }
                    },
                {"defaultContent": '<button type="button" class="btn btn-primary btn-sm btn-editar" ><i class="fas fa-pen me-1"></i></button>' +
                    '<button type="button" class="btn btn-danger ms-2 btn-sm btn-eliminar"><i class="fas fa-trash me-1"></i></button>' +
                    '<button type="button" class="btn btn-warning ms-2 btn-sm btn-info" > <i class= fas fa-info me-1" style="weight: bold;"></i> </button>',

                    "orderable": false,
                    "searchable": false,
                    "width": "120px",
                    "size": "20px"
                }
            ],
            "language": {
                "url": "https://cdn.datatables.net/plug-ins/1.11.5/i18n/es-ES.json"
            }

        });

        ///bibliografias
        jQuery.ajax({
            url: '@Url.Action("ListarBibliografias", "Mantenimiento")',
            type: "GET",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                $("<option>").attr({ "value": "0", "disabled": "true" }).text("Seleccionar").appendTo("#cbxBibliografia");

                $.each(data.data, function (index, value) {

                    console.log(value)

                    $("<option>").attr({ "value": value.Id }).text(value.Name).appendTo("#cbxBibliografia");

                })

                console.log(data)
            },
            error: {

            }
        });
        
          ///Autores
        jQuery.ajax({
            url: '@Url.Action("ListarAutores", "Mantenimiento")',
            type: "GET",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                $("<option>").attr({ "value": "0", "disabled": "true" }).text("Seleccionar").appendTo("#cbxAutores");

                $.each(data.data, function (index, value) {
                    console.log(value)

                    $("<option>").attr({ "value": value.Id }).text(value.Name).appendTo("#cbxAutores");

                })

                console.log(data)
            },
            error: {

            }
        });


        function abrirModal(json) {

            console.log(json)

            if (json != null) {
                $("#mensajeError").hide()
                $("#txtId").val(json.Id)
                $("#txtSignaturaTopografica").val(json.SignaturaTopografica)
                $("#txtNombre").val(json.Nombre)
                $("#txtDesc").val(json.Descripcion)
                $("#txtISB").val(json.ISB)
                $("#txtBibliografiaId").val(json.BibliografiaId)

                /*$("#cbxBibliografia").val(json.xb)*/

                $("#txtAutores").val(json.Autores)
                $("#txtCiencia").val(json.Ciencia)
                $("#txtEditora").val(json.Editora)
                $("#txtIdioma").val(json.Idioma)
                $("#txtYear").val(json.year)
                $("#cbxActivo").val(json.Estado == true ? 1 : 0)


            } else {

                $("#mensajeError").hide()
                $("#txtId").val(0)
                $("#txtSignaturaTopografica").val("")
                $("#txtDesc").val("")
                $("#txtNombre").val("")
                $("#txtISB").val("")
                $("#txtBibliografiaId").val("")

                /*$("#cbxBibliografia").val(json.xb)*/

                $("#txtAutores").val("")
                $("#txtCiencia").val("")
                $("#txtEditora").val("")
                $("#txtIdioma").val("")
                $("#txtYear").val("")
                $("#cbxActivo").val("")
            }

            $("#FormModal").modal("show");
        }

        function Guardar() {

                 var Libro = {

                     Id: $("#txtId").val(),
                     SignaturaTopografica: $("#txtSignaturaTopografica").val(),
                     Nombre: $("#txtNombre").val(),
                     ISB: $("#txtISB").val(),
                     BibliografiaId: $("#cbxBibliografia").val(),
                     Bibliografia: $("#cbxBibliografia").find(":selected").text(),
                     Autores: $("#txtAutores").val(),
                     Descripcion: $("#txtDesc").val(),
                     Ciencia: $("#txtCiencia").val(),
                     Editora: $("#txtEditora").val(),
                     Estado: $("#cbxActivo").val() == 1 ? true : false,
                     Idioma: $("#txtIdioma").val(),
                     year: $("#txtYear").val()

                }

                jQuery.ajax({
                    url: '@Url.Action("GuardarLibro", "Libros")',
                    type: "POST",
                    data: JSON.stringify({ libro: Libro }), // parametro del metodo GuardarUsuario que es usuariox y se carga con el objeto Usuario
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) { //la data es lo que resivimos del url que viene del controlador metodo GuardarUsuario

                        /*debugger;*/

                        //USUARIO NUEVO
                        if (Libro.Id == 0)
                        { // si usuarioID = 0 es que se va a agregar

                            if (data.resultado != 0) {

                                /*Libro.Id = data.resultado;*/
                                tablaData.ajax.reload();
                                /*$('#example').DataTable().ajax.reload()*/
                                $("#FormModal").modal("hide");

                                Swal.fire(
                                    'Todo nitido',
                                    '',
                                    'success'
                                )

                            } else {
                                //$("#mensajeError").text(data.mensaje);
                                //$("#mensajeError").show();

                                Swal.fire(
                                    ''+data.mensaje,
                                    '',
                                    'error'
                                )
                            }
                        }
                        else
                        { // editar

                            if (data.resultado) {

                                tablaData.row(filaSeleccionada).data(Libro).draw(false);
                                filaSeleccionada = null;
                                $("#FormModal").modal("hide");

                                Swal.fire(
                                    'Todo nitido',
                                    '',
                                    'success'
                                )

                            } else {
                                $("#mensajeError").text(data.mensaje);

                                $("#mensajeError").show();

                                Swal.fire(
                                    '' + data.mensaje,
                                    '',
                                    'error'
                                )
                            }
                        }
                    },
                    error: function (error) {
                        console.log(error)
                    },
                    beforeSend: function () {

                    }
                });

                $("#FormModal").modal("hide");
            }


        function Eliminar(json) {

             var Libro = {

                 Id: json["Id"]

            }

            jQuery.ajax({
                url: '@Url.Action("EliminarLibro", "Libros")',
                type: "POST",
                data: JSON.stringify({ id: Libro.Id }), // parametro del metodo GuardarUsuario que es usuariox y se carga con el objeto Usuario
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) { //la data es lo que resivimos del url que viene del controlador metodo GuardarUsuario

                    /*debugger;*/

                        if (data.resultado) {

                            tablaData.row(filaSeleccionada).draw(false);
                            filaSeleccionada = null;

                            Swal.fire(
                                'Borrado',
                                '',
                                'success'
                            )

                        } else {
                            $("#mensajeError").text(data.mensaje);

                            $("#mensajeError").show();
                            Swal.fire(
                                'se jodio' + data.mensaje,
                                '',
                                'error'
                            )
                        }
                },
                error: function (error) {
                    console.log(error)
                },
            });

            $("#FormModal").modal("hide");
        }

        function Detalles(json) {

            console.log(json)

            if (json != null) {

                $("#mensajeError").hide()
                $("#txtIdD").val(json.Id)
                $("#txtSignaturaTopograficaD").val(json.SignaturaTopografica)
                $("#txtNombreD").val(json.Nombre)
                $("#txtDescD").val(json.Descripcion)
                $("#txtISBD").val(json.ISB)
                $("#cbxBibliografiaD").val(json.Bibliografia)

                /*$("#cbxBibliografia").val(json.xb)*/

                $("#txtAutoresD").val(json.Autores)
                $("#txtCienciaD").val(json.Ciencia)
                $("#txtEditoraD").val(json.Editora)
                $("#txtIdiomaD").val(json.Idioma)
                $("#txtYearD").val(json.year)
                $("#cbxActivoD").val(json.Estado == true ? "Si" : "No")




                $("#ModalDetalles").modal("show");
            }
        }

        ////////////////////-----------------------------

        $("#tablaLibros tbody").on("click", '.btn-editar', function () {

            filaSeleccionada = $(this).closest("tr")

            var data = tablaData.row(filaSeleccionada).data()

            console.log(tablaData.row(filaSeleccionada).data())

            abrirModal(data)

        })

        $("#tablaLibros tbody").on("click", '.btn-eliminar', function () {

            filaSeleccionada = $(this).closest("tr")

            var data = tablaData.row(filaSeleccionada).data()

            //console.log(tablaData.row(filaSeleccionada).data())

            Eliminar(data)

            tablaData.row(filaSeleccionada).remove();

        })

        $("#tablaLibros tbody").on("click", '.btn-info', function () {

            filaSeleccionada = $(this).closest("tr")

            var data = tablaData.row(filaSeleccionada).data()

            Detalles(data)

            //console.log(tablaData.row(filaSeleccionada).data())

            /*Eliminar(data)*/

            /*tablaData.row(filaSeleccionada).remove();*/

        })
    </script>
}

